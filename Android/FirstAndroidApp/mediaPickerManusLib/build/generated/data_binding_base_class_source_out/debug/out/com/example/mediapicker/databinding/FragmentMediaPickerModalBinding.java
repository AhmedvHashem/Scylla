// Generated by view binder compiler. Do not edit!
package com.example.mediapicker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mediapicker.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMediaPickerModalBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonCancel;

  @NonNull
  public final MaterialButton buttonCaptureImage;

  @NonNull
  public final MaterialButton buttonPickMultipleDocuments;

  @NonNull
  public final MaterialButton buttonPickMultipleImages;

  @NonNull
  public final MaterialButton buttonPickSingleDocument;

  @NonNull
  public final MaterialButton buttonPickSingleImage;

  @NonNull
  public final TextView titleText;

  private FragmentMediaPickerModalBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton buttonCancel, @NonNull MaterialButton buttonCaptureImage,
      @NonNull MaterialButton buttonPickMultipleDocuments,
      @NonNull MaterialButton buttonPickMultipleImages,
      @NonNull MaterialButton buttonPickSingleDocument,
      @NonNull MaterialButton buttonPickSingleImage, @NonNull TextView titleText) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonCaptureImage = buttonCaptureImage;
    this.buttonPickMultipleDocuments = buttonPickMultipleDocuments;
    this.buttonPickMultipleImages = buttonPickMultipleImages;
    this.buttonPickSingleDocument = buttonPickSingleDocument;
    this.buttonPickSingleImage = buttonPickSingleImage;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMediaPickerModalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMediaPickerModalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_media_picker_modal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMediaPickerModalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_cancel;
      MaterialButton buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.button_capture_image;
      MaterialButton buttonCaptureImage = ViewBindings.findChildViewById(rootView, id);
      if (buttonCaptureImage == null) {
        break missingId;
      }

      id = R.id.button_pick_multiple_documents;
      MaterialButton buttonPickMultipleDocuments = ViewBindings.findChildViewById(rootView, id);
      if (buttonPickMultipleDocuments == null) {
        break missingId;
      }

      id = R.id.button_pick_multiple_images;
      MaterialButton buttonPickMultipleImages = ViewBindings.findChildViewById(rootView, id);
      if (buttonPickMultipleImages == null) {
        break missingId;
      }

      id = R.id.button_pick_single_document;
      MaterialButton buttonPickSingleDocument = ViewBindings.findChildViewById(rootView, id);
      if (buttonPickSingleDocument == null) {
        break missingId;
      }

      id = R.id.button_pick_single_image;
      MaterialButton buttonPickSingleImage = ViewBindings.findChildViewById(rootView, id);
      if (buttonPickSingleImage == null) {
        break missingId;
      }

      id = R.id.title_text;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new FragmentMediaPickerModalBinding((LinearLayout) rootView, buttonCancel,
          buttonCaptureImage, buttonPickMultipleDocuments, buttonPickMultipleImages,
          buttonPickSingleDocument, buttonPickSingleImage, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
